#include<stdio.h>
#include<stdlib.h>

struct node{
    int data;
    struct node *next;
};

struct node * traverse(struct node* head)
{
    struct node *p = head;
    while(p->next!=head)
    {
        printf("%d\t",p->data);
        p = p->next;
    }
    printf("%d",p->data);
}
struct node * atbeginning(struct node *head , int data)
{
    struct node *ptr = (struct node*)malloc(sizeof(struct node));
    struct node *p = head;
    while(p->next != head)
    {
        p = p->next;
    }
    ptr->data = data;
    p->next = ptr;
    ptr->next = head;
    return ptr;
}
struct node * inbetween(struct node *head , int data , int index)
{
    struct node *ptr = (struct node*)malloc(sizeof(struct node));
    struct node *p = head;
    int i = 0;
    while(i != index-1)
    {
        p = p->next;
        i++;
    }
    ptr->data = data;
    ptr->next = p->next;
    p->next = ptr;
    return head;
}
int main()
{
    struct node *head = (struct node *)malloc(sizeof(struct node));
    struct node *first = (struct node *)malloc(sizeof(struct node));
    struct node *second = (struct node *)malloc(sizeof(struct node));
    struct node *third = (struct node *)malloc(sizeof(struct node));
    struct node *fourth = (struct node *)malloc(sizeof(struct node));

    head->data = 10;
    head->next = first;

    first->data = 20;
    first->next = second;

    second->data = 30;
    second->next = third;

    third->data = 40;
    third->next = fourth;

    fourth->data = 50;
    fourth->next = head;

    head = atbeginning(head , 5 );
    traverse(head);
    return 0;
}
