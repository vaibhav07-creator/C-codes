#include<stdio.h>
#include<stdlib.h>

struct stack{
    int size;
    int top;
    int *arr;
};

int isempty(struct stack * p)
{
    if(p->top == -1)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
int isfull(struct stack * ptr)
{
    if(ptr->top == ptr->size-1)
    {
        return 1; 
    }
    else
    {
        return 0;
    }
}

int push(struct stack *sp , int val)
{
    if(isfull(sp))
    {
        printf("\nStack is Overflow\n");
        return -1;
    }
    else{
        sp->top++;
        sp->arr[sp->top] = val;
        return 1;
    }
}

int pop(struct stack *sp)
{
    if(isempty(sp))
    {
        printf("\nStack Underflow\n");
        return -1;
    }
    else{
        return sp->arr[sp->top--];
    }
}

void display(struct stack *sp)
{
    printf("\nElements are\n");
    for(int i = 0 ; i<=sp->top;i++)
    {
        
        printf("%d\t",sp->arr[i]);
    }
}

int main()
{
    struct stack *s;
    s = (struct stack *)malloc(sizeof(struct stack));
    s->size = 5;
    s->top = -1;
    s->arr = (int *)malloc(s->size * sizeof(int));
    printf("Your Stack is Created\n");
    for(int i = 0 ;i<5 ;i++)
    {
        int n;
        scanf("%d",&n);
        push(s , n);
    }
    display(s);
    int n = pop(s);
    printf("\n\n%d is popped\n",n);
    display(s);
    return 0;

}
