#include<stdio.h>
#include<stdlib.h>

struct node{
    int data;
    struct node *next;
};

void traverse(struct node* p)
{
    while(p!= NULL)
    {
        printf("%d\t",p->data);
        p = p->next;
    }
}


struct node * atbeginning(struct node *head)
{
    struct node *ptr = head;
    head = head->next;
    free(ptr);
    return head; 
}
struct node * inbetween(struct node * head , int index)
{
    struct node *ptr = head;
    struct node *q = head->next;
    int i = 0 ; 
    while(i != index -1)
    {
        ptr = ptr->next;
        q = q->next;
        i++;
    }
    ptr->next = q->next;
    free(q);
    return head;
}

struct node * atend(struct node * head)
{
    struct node *ptr = head;
    struct node *q = head->next; 
    while(q->next!=NULL)
    {
        ptr = ptr->next;
        q = q->next;
    }
    ptr->next = NULL;
    free(q);
    return head;
}
struct node * givevalue(struct node * head , int value)
{
    struct node *ptr = head;
    struct node *q = head->next; 
    while(q->data != value && q->next!=NULL)
    {
        ptr = ptr->next;
        q = q->next;
    }
    if(q->data == value)
    {
        ptr->next = q->next;
        free(q);
    }
    return head;
}




int main()
{
    struct node *head = (struct node *)malloc(sizeof(struct node));
    struct node *first = (struct node *)malloc(sizeof(struct node));
    struct node *second = (struct node *)malloc(sizeof(struct node));
    struct node *third = (struct node *)malloc(sizeof(struct node));
    struct node *fourth = (struct node *)malloc(sizeof(struct node));

    head->data = 10;
    head->next = first;

    first->data = 20;
    first->next = second;

    second->data = 30;
    second->next = third;

    third->data = 40;
    third->next = fourth;

    fourth->data = 50;
    fourth->next = NULL;

    //head = atbeginning(head);
    //head = atend(head);
    //head = givevalue(head , 40);
    head = inbetween(head,2);
    traverse(head);
    return 0;
}
